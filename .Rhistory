download.file('https://github.com/rdpeng/RepData_PeerAssessment1/blob/master/activity.zip')
getwd()
download.file('https://github.com/rdpeng/RepData_PeerAssessment1/blob/master/activity.zip','./moving.zip')
download.file('https://github.com/rdpeng/RepData_PeerAssessment1/blob/master/activity.zip','./activity.zip')
unzipfile<-unzip('./activity.zip')
unzipfile<-unzip('activity.zip')
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip','./activity.zip')
unzipfile<-unzip('./activity.zip')
ctivity<-read.csv('./activity.csv')
activity<-read.csv('./activity.csv')
colnames(activity)
head(activity)
head(activity,100)
activity
tail)activity
tail(activity)
activity[333:"380"]
activity[333:380]
pattern='2012-[0-9]+-[0-9]+'
grep(pattern,activity$date)
grep(pattern,activity$date,value =TRUE)
library(plyr)
ddply(d, .(Name), summarize,  Rate1=mean(Rate1), Rate2=mean(Rate2))
ddply(activity,.(date),mean_steps=mean(steps))
Rate1.mean <- with(activity, ave(steps, date, FUN = function(x) mean(x, na.rm = TRUE)))
Rate1.mean
aggregate(activity$steps, list(activity$date), mean)
aggregate(activity$steps,list(activity$date),mean,na.action=na.omit)
z<-aggregate(activity$steps,list(activity$date),mean,na.action=na.omit)
class(z)
z$x
library(ggplot2)
ggplot(z, aes(x=x)) + geom_histogram()
ggplot(z, aes(x=Group.1)) + geom_histogram()
hist(z$x)
ggplot(z, aes(x=Group.1)) + geom_histogram()
colnames(z)[2]<-'mean'
z
ggplot(activity, aes(x=x, color=Group.1)) +
geom_histogram(fill="white")
ggplot(activity, aes(x=x, color=Group.1)) +
+   geom_histogram(fill="white")
activity
ggplot(z, aes(x=x, color=Group.1)) +
+   geom_histogram(fill="white")
ggplot(z, aes(x=x, color=Group.1)) + geom_histogram(fill="white")
z
ggplot(z, aes(x=mean, color=Group.1)) + geom_histogram(fill="white")
ggplot(z, aes(x=mean)) + geom_histogram(color='red',fill="white")
ggplot(z, aes(x=mean)) + geom_histogram(color='red',fill="black")
ggplot(z, aes(x=mean)) + geom_histogram(color='white',fill="white")
ggplot(z, aes(x=mean)) + geom_histogram(color='red',fill="black")
ggplot(z, aes(x=mean)) + geom_histogram(color='white',fill="black")
ggplot(z, aes(x=mean)) + geom_histogram(color='red',fill="blue")
Total_steps_per_day<-aggregate(activity$steps,list(activity$date),summarise,na.action=na.omit)
Total_steps_per_day<-aggregate(activity$steps,list(activity$date),summarize,na.action=na.omit)
Total_steps_per_day<-aggregate(activity$steps,list(activity$date),sum,na.action=na.omit)
aggregate(activity$steps,list(activity$date),sum,na.action=na.omit)
median_steps_per_day<-aggregate(activity$steps,list(activity$date),median,na.action=na.omit)
colnames(median_steps_per_day)[2]<-'median'
median_steps_per_day
sum(c(1,2,3))
z<-read.csv('./activity.csv')
Total_steps_per_day<-aggregate(activity$steps,list(activity$date),sum,na.action=na.omit)
Total_steps_per_day<-aggregate(z$steps,list(z$date),sum,na.action=na.omit)
list(z$date)
aggregate(z$steps,by=list(date=z$date),FUN=sum())
aggregate(z$steps,by=list(date=z$date),FUN=sum
)
aggregate(total_steps_per_day=z$steps,by=list(date=z$date),FUN=sum )
aggregate(z$steps,by=list(date=z$date),FUN=mean)
head(z)
aggregate(activity$steps,by=list(date=activity$date),FUN=median)
aggregate(activity$steps,by=list(date=activity$date),FUN=median,na.action=na.omit)
z[z$date=='2012-11-15']
subset(z,z$date=='2012-11-15')
sum(subset(z,z$date=='2012-11-15'))
sum(subset(z,z$date=='2012-11-15')$steps)
aggregate(z$steps,by=list(date=z$date),FUN=sum)
x<-aggregate(z$steps,by=list(date=z$date),FUN=sum)
median(x$x,na.rm = TRUE)
aggregate(x,by=list(x$date),FUN=median())
aggregate(x,by=list(x$date),FUN=median
)
library(lubridate)
z$date<-ymd(z$date)
head(z)
dim(z)
x<-dim(z)[1]
x
x[2]
x[[1]]
sum(is.na(z$steps))
tapply(z$steps,z$date,sum,na.rm=TRUE)
Q2<-data.frame(tapply(z$steps,z$date,sum,na.rm=TRUE))
Q2
rownames(Q2)
Q$date<-rownames(Q2)
Q2$date<-rownames(Q2)
Q2
rownames(Q2)<-NULL
Q2
names(Q2)
names(Q2)[[1]]
df1<-data.frame(tapply(activity$steps,INDEX=activity$date,FUN=sum,na.rm=TRUE))
df1
names(df1)[1]
names(df1)[[1]]
class(names(df1))
library(ggplot2)
library(dplyr)
df1<-data.frame(tapply(activity$steps,INDEX=activity$date,FUN=sum,na.rm=TRUE))
df1$date<-rownames(df1)
df1$Total_steps_per_day<-names(df1)[[1]]
ggplot(df1,aes(x=Total_steps_per_day))+geom_histogram(color='red',fill='blue')
library(plyr)
mu <- ddply(df, "sex", summarise, grp.mean=mean(weight))
mu <- ddply(activity, "date", summarise, grp.mean=mean(steps))
mu
mu <- ddply(activity, "date", summarise, grp.mean=sum(steps,na.rm=TRUE))
mu
mu <- ddply(activity, "date", summarise, grp.mean=round(mean(steps,na.rm=TRUE)))
mu
mu <- ddply(activity, "date", summarise, grp.mean=mean(steps,na.rm=TRUE))
mu
mu$date
class(mu$date)
mu$date[1]
mu$date[[1]]
list(mu$date)[1]
x<-list(mu$date)
x
x[1]
x[11]
x[[1]]
print(df2$date[which(mu$grp.mean==max(mu$grp.mean)])
print(which(mu$grp.mean==max(mu$grp.mean)))
print(mu$date[which(mu$grp.mean==max(mu$grp.mean))])
print(which(mu$grp.mean==max(mu$grp.mean,na.rm = TRUE)))
mu$date[54]
print(mu$date[54])
mu$date[54][1]
sum(is.na(activity$steps))
activity$interval<-factor(activity$interval)
df4<-aggregate(activity,steps~date+interval,FUN="mean")
df4<-aggregate(df4,steps~interval,FUN="max")
df4<-aggregate(activity,steps~date+interval,FUN="mean")
df4<-ddply(activity,'date'+'interval',summarize,grp.mean=mean(steps,na.rm=TRUE))
aggregate(.~date+interval, activity, mean)
x<-aggregate(.~date+interval, activity, mean)
aggregate(x$steps,list(x$interval),max)
is.na(activity$steps)
activity$interval<-factor(activity$interval)
head(activity)
activity$interval<-factor(activity$interval)
df4<-ddply(activity,"interval",summarize,interval_average=mean(steps,na.rm=TRUE))
max_steps <- max(df4$interval_average)
z<-df4[df4$interval_average == max_steps,]
print(z)
interval_avg <- tapply(activity$steps, activity$interval, mean, na.rm=TRUE, simplify=T)
interval_avg
missing <- is.na(activity$steps)
as.character(df5$interval[missing])
as.character(activity$interval[missing])
interval_avg[as.character(df5$interval[missing])]
interval_avg[as.character(activity$interval[missing])]
x<-c(1,4)
x['1']
x[1]
interval_avg[activity$interval[missing]]
activity$steps[missing] <- interval_avg[activity$interval[missing]]
head(activity)
activity<-read.csv('./activity.csv')
library(plyr)
df1<-ddply(activity,"date",summarize,total_steps_per_day=sum(steps,na.rm=TRUE))
print(mean(df1$Total_steps_per_day))
print(median(df1$Total_steps_per_day))
df1
mean(df1$total_steps_per_day)
median(df1$total_steps_per_day)
activity$interval<-factor(activity$interval)
library(dplyr)
df5 <-activity
missing <- is.na(df5$steps)
interval_avg <- tapply(df5$steps, df5$interval, mean, na.rm=TRUE, simplify=T)
df5$steps[missing] <- interval_avg[df5$interval[missing]]
total_steps_per_day<-tapply(df5$steps, df5$date, sum, simplify=T)
print(mean(total_steps_per_day))
print(median(total_steps_per_day))
activity<-read.csv('./activity.csv')
activity$date <- as.Date(activity$date)
df_na_removed <- subset(activity, !is.na(activity$steps))
head(df_na_removed)
library(ggplot2)
library(plyr)
df1<-ddply(df_na_removed,"date",summarize,total_steps_per_day=sum(steps))
print(mean(df1$total_steps_per_day))
print(median(df1$total_steps_per_day))
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps))
head(df2)
ax_steps <- max(df2$interval_average)
z<-df2[df2$interval_average == max_steps,]
print(z)
library(dplyr)
activity$interval<-factor(activity$interval)
df3 <-activity
missing <- is.na(df3$steps)
interval_avg <- tapply(df3$steps, df3$interval, mean, na.rm=TRUE, simplify=T)
df3$steps[missing] <- interval_avg[df3$interval[missing]]
total_steps_per_day<-tapply(df3$steps, df3$date, sum, na.rm=T,simplify=T)
print(mean(total_steps_per_day))
print(median(total_steps_per_day))
weekdays('2012-11-14')
weekdays(as.Date('2012-11-15'))
is_weekday <- function(d) {
wd <- weekdays(d)
ifelse (wd == "Saturday" | wd == "Sunday", "weekend", "weekday")
}
is_weekday(as.Date('2012-11-15'))
rm(list=ls())
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip','./activity.zip')
unzipfile<-unzip('./activity.zip')
activity<-read.csv('./activity.csv')
activity$date <- as.Date(activity$date)
df_na_removed <- subset(activity, !is.na(activity$steps))
head(df_na_removed)
library(ggplot2)
library(plyr)
df1<-ddply(df_na_removed,"date",summarize,total_steps_per_day=sum(steps,na.rm=T))
ggplot(df1, aes(x=total_steps_per_day))+
geom_histogram(color="red", fill="blue")+ggtitle('The distribution of total steps per day (missing data ignored)')
print(mean(df1$total_steps_per_day))
print(median(df1$total_steps_per_day))
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type='l')
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l")
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=3)
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=5)
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4)
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4,color='red')
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4,color='red')
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4,col='red')
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4,col = "red")
max_steps <- max(df2$interval_average)
z<-df2[df2$interval_average == max_steps,]
print(z)
print(sum(is.na(activity$steps)))
library(dplyr)
activity$interval<-factor(activity$interval)
df3 <-activity
missing <- is.na(df3$steps)
interval_avg <- tapply(df3$steps, df3$interval, mean, na.rm=TRUE, simplify=T)
df3$steps[missing] <- interval_avg[df3$interval[missing]]
library(dplyr)
activity$interval<-factor(activity$interval)
df3 <-activity
missing <- is.na(df3$steps)
interval_avg <- tapply(df3$steps, df3$interval, mean, na.rm=TRUE, simplify=T)
df3$steps[missing] <- interval_avg[df3$interval[missing]]
head(df3)
total_steps_per_day<-tapply(df3$steps, df3$date, sum, na.rm=T,simplify=T)
hist(total_steps_per_day,
col="blue",
breaks=22,
xlab="steps per day ",
ylab="frequency",
main="The distribution of total steps per day (with missing data imputed)")
print(mean(total_steps_per_day))
print(median(total_steps_per_day))
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-lapply(df3$date, iweekday)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-lapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-sapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
head(df3)
df4<- aggregate(steps ~ wdk+interval,df3,mean)
library(lattice)
xyplot(steps ~ interval | factor(wdk),
layout = c(1, 2),
xlab="Interval",
ylab="Number of steps",
type="l",
data=df4)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-lapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-lapply(list(df3$date), weekday)
df3$wdk<-as.factor(wdk)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-lapply(as.vector(df3$date), weekday)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-sapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
head(df3)
df4<- aggregate(steps ~ wdk+interval,df3,mean)
library(lattice)
xyplot(steps ~ interval | factor(wdk),
layout = c(1, 2),
xlab="Interval",
ylab="Number of steps",
type="l",
data=df4)
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-sapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
head(df3)
df4<- aggregate(steps ~ wdk+interval,df3,mean)
library(lattice)
xyplot(steps ~ interval | factor(wdk),
layout = c(1, 2),
xlab="Interval",
ylab="Number of steps",
type="l",
data=df4)
sessionInfo()
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip','./activity.zip')
unzipfile<-unzip('./activity.zip')
activity<-read.csv('./activity.csv')
activity$date <- as.Date(activity$date)
df_na_removed <- subset(activity, !is.na(activity$steps))
head(df_na_removed)
library(ggplot2)
library(plyr)
df1<-ddply(df_na_removed,"date",summarize,total_steps_per_day=sum(steps,na.rm=T))
ggplot(df1, aes(x=total_steps_per_day))+
geom_histogram(color="red", fill="blue")+ggtitle('The distribution of total steps per day (missing data ignored)')
print(mean(df1$total_steps_per_day))
print(median(df1$total_steps_per_day))
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4)
max_steps <- max(df2$interval_average)
z<-df2[df2$interval_average == max_steps,]
print(z)
print(sum(is.na(activity$steps)))
library(dplyr)
activity$interval<-factor(activity$interval)
df3 <-activity
missing <- is.na(df3$steps)
interval_avg <- tapply(df3$steps, df3$interval, mean, na.rm=TRUE, simplify=T)
df3$steps[missing] <- interval_avg[df3$interval[missing]]
head(df3)
total_steps_per_day<-tapply(df3$steps, df3$date, sum, na.rm=T,simplify=T)
hist(total_steps_per_day,
col="blue",
breaks=22,
xlab="steps per day ",
ylab="frequency",
main="The distribution of total steps per day (with missing data imputed)")
print(mean(total_steps_per_day))
print(median(total_steps_per_day))
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-sapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
head(df3)
df4<- aggregate(steps ~ wdk+interval,df3,mean)
library(lattice)
xyplot(steps ~ interval | factor(wdk),
layout = c(1, 2),
xlab="Interval",
ylab="Number of steps",
type="l",
data=df4)
download.file('https://d396qusza40orc.cloudfront.net/repdata%2Fdata%2Factivity.zip','./activity.zip')
unzipfile<-unzip('./activity.zip')
activity<-read.csv('./activity.csv')
activity$date <- as.Date(activity$date)
df_na_removed <- subset(activity, !is.na(activity$steps))
head(df_na_removed)
library(ggplot2)
library(plyr)
df1<-ddply(df_na_removed,"date",summarize,total_steps_per_day=sum(steps,na.rm=T))
ggplot(df1, aes(x=total_steps_per_day))+
geom_histogram(color="red", fill="blue")+ggtitle('The distribution of total steps per day (missing data ignored)')
print(mean(df1$total_steps_per_day))
print(median(df1$total_steps_per_day))
df_na_removed$interval<-factor(df_na_removed$interval)
df2<-ddply(df_na_removed,"interval",summarize,interval_average=mean(steps,na.rm=T))
plot(df2$interval,df2$interval_average,xlab='5-minute intervals',ylab='average steps in the interval across all days',type="l",lwd=4)
max_steps <- max(df2$interval_average)
z<-df2[df2$interval_average == max_steps,]
print(z)
print(sum(is.na(activity$steps)))
library(dplyr)
activity$interval<-factor(activity$interval)
df3 <-activity
missing <- is.na(df3$steps)
interval_avg <- tapply(df3$steps, df3$interval, mean, na.rm=TRUE, simplify=T)
df3$steps[missing] <- interval_avg[df3$interval[missing]]
head(df3)
total_steps_per_day<-tapply(df3$steps, df3$date, sum, na.rm=T,simplify=T)
hist(total_steps_per_day,
col="blue",
breaks=22,
xlab="steps per day ",
ylab="frequency",
main="The distribution of total steps per day (with missing data imputed)")
print(mean(total_steps_per_day))
print(median(total_steps_per_day))
weekday <- function(d) {
wd <- weekdays(d)
if (wd=='saturday' | wd=='sunday'){
return('weekend')
}else{
return('weekday')
}
}
wdk<-sapply(df3$date, weekday)
df3$wdk<-as.factor(wdk)
head(df3)
df4<- aggregate(steps ~ wdk+interval,df3,mean)
library(lattice)
xyplot(steps ~ interval | factor(wdk),
layout = c(1, 2),
xlab="Interval",
ylab="Number of steps",
type="l",
data=df4)
